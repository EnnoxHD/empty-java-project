plugins {
   id 'java'
   id 'application'
//   id 'org.openjfx.javafxplugin' version '0.0.9'
//   id 'java-library'
}

java {
   modularity.inferModulePath = true
   toolchain {
      languageVersion = JavaLanguageVersion.of(15)
   }
}

application {
   mainModule = 'com.github.ennoxhd.empty.java'
   mainClass  = 'com.github.ennoxhd.empty.java.app.EmptyJavaProject'
}

//javafx {
//    version = '15'
//    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
//}

run {
//   standardInput = System.in
}

repositories {
//   mavenCentral()
}

dependencies {
//   implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

task debug (type: Exec) {
   group = 'application'
   description = 'Runs this project as a JVM application with debugging enabled (add program arguments with -Pargs="...")'

   def baseCommand = 'run --debug-jvm'
   if(project.hasProperty('args')) {
      baseCommand += ' --args="' + project.getProperty('args') + '"'
   }
   if (System.properties['os.name'].toLowerCase().contains('windows')) {
      commandLine = ['cmd', '/c', 'gradlew.bat ' + baseCommand]
   } else {
      commandLine = ['sh', 'gradlew ' + baseCommand]
   }
}
