apply plugin: 'eclipse'

eclipse {
    classpath {
        containers = [
        	'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-21/',
        	'org.eclipse.buildship.core.gradleclasspathcontainer'
        ]
        defaultOutputDir = file('bin/default')
        file.whenMerged {
        	entries.find {
        		it.kind == 'src' && it.path == 'src/main/java'
        	}.each {
        		it.output = 'build/classes/java/main'
        	}
        	
        	entries.find {
        		it.kind == 'con' && it.path == 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-21/'
        	}.each {
        		it.entryAttributes['module'] = 'true'
        	}
        }
    }
	jdt {
		sourceCompatibility = 21
		targetCompatibility = 21
		file.withProperties {
			it['eclipse.preferences.version'] = '1'
			it['org.eclipse.jdt.core.builder.annotationPath.allLocations'] = 'disabled'
			it['org.eclipse.jdt.core.builder.cleanOutputFolder'] = 'clean'
			it['org.eclipse.jdt.core.builder.duplicateResourceTask'] = 'warning'
			it['org.eclipse.jdt.core.builder.invalidClasspath'] = 'abort'
			it['org.eclipse.jdt.core.builder.recreateModifiedClassFileInOutputFolder'] = 'enabled'
			it['org.eclipse.jdt.core.builder.resourceCopyExclusionFilter'] = ''
			it['org.eclipse.jdt.core.circularClasspath'] = 'error'
			it['org.eclipse.jdt.core.classpath.exclusionPatterns'] = 'enabled'
			it['org.eclipse.jdt.core.classpath.mainOnlyProjectHasTestOnlyDependency'] = 'error'
			it['org.eclipse.jdt.core.classpath.multipleOutputLocations'] = 'enabled'
			it['org.eclipse.jdt.core.classpath.outputOverlappingAnotherSource'] = 'error'
			it['org.eclipse.jdt.core.codeComplete.argumentPrefixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.argumentSuffixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.fieldPrefixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.fieldSuffixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.localPrefixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.localSuffixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.staticFieldPrefixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.staticFieldSuffixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.staticFinalFieldPrefixes'] = ''
			it['org.eclipse.jdt.core.codeComplete.staticFinalFieldSuffixes'] = ''
			it['org.eclipse.jdt.core.compiler.annotation.inheritNullAnnotations'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.annotation.missingNonNullByDefaultAnnotation'] = 'info'
			it['org.eclipse.jdt.core.compiler.annotation.nonnull'] = 'org.eclipse.jdt.annotation.NonNull'
			it['org.eclipse.jdt.core.compiler.annotation.nonnull.secondary'] = ''
			it['org.eclipse.jdt.core.compiler.annotation.nonnullbydefault'] = 'org.eclipse.jdt.annotation.NonNullByDefault'
			it['org.eclipse.jdt.core.compiler.annotation.nonnullbydefault.secondary'] = ''
			it['org.eclipse.jdt.core.compiler.annotation.notowning'] = 'org.eclipse.jdt.annotation.NotOwning'
			it['org.eclipse.jdt.core.compiler.annotation.nullable'] = 'org.eclipse.jdt.annotation.Nullable'
			it['org.eclipse.jdt.core.compiler.annotation.nullable.secondary'] = ''
			it['org.eclipse.jdt.core.compiler.annotation.nullanalysis'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.annotation.owning'] = 'org.eclipse.jdt.annotation.Owning'
			it['org.eclipse.jdt.core.compiler.annotation.resourceanalysis'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.codegen.methodParameters'] = 'generate'
			it['org.eclipse.jdt.core.compiler.codegen.targetPlatform'] = '21'
			it['org.eclipse.jdt.core.compiler.codegen.unusedLocal'] = 'optimize out'
			it['org.eclipse.jdt.core.compiler.compliance'] = '21'
			it['org.eclipse.jdt.core.compiler.debug.lineNumber'] = 'generate'
			it['org.eclipse.jdt.core.compiler.debug.localVariable'] = 'generate'
			it['org.eclipse.jdt.core.compiler.debug.sourceFile'] = 'generate'
			it['org.eclipse.jdt.core.compiler.doc.comment.support'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.maxProblemPerUnit'] = '100'
			it['org.eclipse.jdt.core.compiler.problem.APILeak'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.annotatedTypeArgumentToUnannotated'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.annotationSuperInterface'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.assertIdentifier'] = 'error'
			it['org.eclipse.jdt.core.compiler.problem.autoboxing'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.comparingIdentical'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.deadCode'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.deprecation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.deprecationInDeprecatedCode'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.deprecationWhenOverridingDeprecatedMethod'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.discouragedReference'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.emptyStatement'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.enumIdentifier'] = 'error'
			it['org.eclipse.jdt.core.compiler.problem.explicitlyClosedAutoCloseable'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.fallthroughCase'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.fatalOptionalError'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.fieldHiding'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.finalParameterBound'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.finallyBlockNotCompletingNormally'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.forbiddenReference'] = 'error'
			it['org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.incompatibleOwningContract'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.indirectStaticAccess'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.insufficientResourceAnalysis'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.invalidJavadoc'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.invalidJavadocTags'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsDeprecatedRef'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsNotVisibleRef'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.invalidJavadocTagsVisibility'] = 'private'
			it['org.eclipse.jdt.core.compiler.problem.localVariableHiding'] = 'ignore'
			it['org.eclipse.jdt.core.compiler.problem.methodWithConstructorName'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.missingDefaultCase'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.missingDeprecatedAnnotation'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.missingEnumCaseDespiteDefault'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.missingHashCodeMethod'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocComments'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsOverriding'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocCommentsVisibility'] = 'private'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocTagDescription'] = 'all_standard_tags'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocTags'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocTagsMethodTypeParameters'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocTagsOverriding'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.missingJavadocTagsVisibility'] = 'private'
			it['org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotationForInterfaceMethodImplementation'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.missingSerialVersion'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.missingSynchronizedOnInheritedMethod'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.noEffectAssignment'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.noImplicitStringConversion'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.nonExternalizedStringLiteral'] = 'ignore'
			it['org.eclipse.jdt.core.compiler.problem.nonnullParameterAnnotationDropped'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.nonnullTypeVariableFromLegacyInvocation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.nullAnnotationInferenceConflict'] = 'error'
			it['org.eclipse.jdt.core.compiler.problem.nullReference'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.nullSpecViolation'] = 'error'
			it['org.eclipse.jdt.core.compiler.problem.nullUncheckedConversion'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.overridingPackageDefaultMethod'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.parameterAssignment'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.pessimisticNullAnalysisForFreeTypeVariables'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.possibleAccidentalBooleanAssignment'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.potentialNullReference'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.potentiallyUnclosedCloseable'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.rawTypeReference'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.redundantNullAnnotation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.redundantNullCheck'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.redundantSpecificationOfTypeArguments'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.redundantSuperinterface'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.reportMethodCanBePotentiallyStatic'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.reportMethodCanBeStatic'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.specialParameterHidingField'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.staticAccessReceiver'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.suppressOptionalErrors'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.suppressWarnings'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.suppressWarningsNotFullyAnalysed'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.syntacticNullAnalysisForFields'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.syntheticAccessEmulation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.terminalDeprecation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.typeParameterHiding'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unavoidableGenericTypeProblems'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.uncheckedTypeOperation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unclosedCloseable'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.undocumentedEmptyBlock'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unhandledWarningToken'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentType'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unlikelyCollectionMethodArgumentTypeStrict'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.unlikelyEqualsArgumentType'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.unnecessaryElse'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.unnecessaryTypeCheck'] = 'info'
			it['org.eclipse.jdt.core.compiler.problem.unqualifiedFieldAccess'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unstableAutoModuleName'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownException'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionExemptExceptionAndThrowable'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionIncludeDocCommentReference'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.unusedDeclaredThrownExceptionWhenOverriding'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.unusedExceptionParameter'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedImport'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedLabel'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedLocal'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedObjectAllocation'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedParameter'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedParameterIncludeDocCommentReference'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.unusedParameterWhenImplementingAbstract'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.unusedParameterWhenOverridingConcrete'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.problem.unusedPrivateMember'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedTypeParameter'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.unusedWarningToken'] = 'warning'
			it['org.eclipse.jdt.core.compiler.problem.varargsArgumentNeedCast'] = 'warning'
			it['org.eclipse.jdt.core.compiler.processAnnotations'] = 'disabled'
			it['org.eclipse.jdt.core.compiler.release'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.source'] = '21'
			it['org.eclipse.jdt.core.compiler.taskCaseSensitive'] = 'enabled'
			it['org.eclipse.jdt.core.compiler.taskPriorities'] = 'NORMAL,HIGH'
			it['org.eclipse.jdt.core.compiler.taskTags'] = 'TODO,FIXME'
			it['org.eclipse.jdt.core.formatter.align_arrows_in_switch_on_columns'] = 'true'
			it['org.eclipse.jdt.core.formatter.align_assignment_statements_on_columns'] = 'false'
			it['org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines'] = '2147483647'
			it['org.eclipse.jdt.core.formatter.align_selector_in_method_invocation_on_expression_first_line'] = 'true'
			it['org.eclipse.jdt.core.formatter.align_type_members_on_columns'] = 'false'
			it['org.eclipse.jdt.core.formatter.align_variable_declarations_on_columns'] = 'false'
			it['org.eclipse.jdt.core.formatter.align_with_spaces'] = 'false'
			it['org.eclipse.jdt.core.formatter.alignment_for_additive_operator'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_annotations_on_enum_constant'] = '49'
			it['org.eclipse.jdt.core.formatter.alignment_for_annotations_on_field'] = '49'
			it['org.eclipse.jdt.core.formatter.alignment_for_annotations_on_local_variable'] = '49'
			it['org.eclipse.jdt.core.formatter.alignment_for_annotations_on_method'] = '49'
			it['org.eclipse.jdt.core.formatter.alignment_for_annotations_on_package'] = '49'
			it['org.eclipse.jdt.core.formatter.alignment_for_annotations_on_parameter'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_annotations_on_type'] = '49'
			it['org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_assertion_message'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_assignment'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_bitwise_operator'] = '0'
			it['org.eclipse.jdt.core.formatter.alignment_for_compact_if'] = '49'
			it['org.eclipse.jdt.core.formatter.alignment_for_compact_loops'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_conditional_expression'] = '48'
			it['org.eclipse.jdt.core.formatter.alignment_for_conditional_expression_chain'] = '48'
			it['org.eclipse.jdt.core.formatter.alignment_for_enum_constants'] = '17'
			it['org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_arrow'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_expressions_in_switch_case_with_colon'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_logical_operator'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_method_declaration'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_module_statements'] = '32'
			it['org.eclipse.jdt.core.formatter.alignment_for_multiple_fields'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_multiplicative_operator'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references'] = '0'
			it['org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_permitted_types_in_type_declaration'] = '32'
			it['org.eclipse.jdt.core.formatter.alignment_for_record_components'] = '17'
			it['org.eclipse.jdt.core.formatter.alignment_for_relational_operator'] = '0'
			it['org.eclipse.jdt.core.formatter.alignment_for_resources_in_try'] = '80'
			it['org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_shift_operator'] = '0'
			it['org.eclipse.jdt.core.formatter.alignment_for_string_concatenation'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration'] = '32'
			it['org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_record_declaration'] = '32'
			it['org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration'] = '32'
			it['org.eclipse.jdt.core.formatter.alignment_for_switch_case_with_arrow'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_type_annotations'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_type_arguments'] = '0'
			it['org.eclipse.jdt.core.formatter.alignment_for_type_parameters'] = '16'
			it['org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch'] = '16'
			it['org.eclipse.jdt.core.formatter.blank_lines_after_imports'] = '-2'
			it['org.eclipse.jdt.core.formatter.blank_lines_after_last_class_body_declaration'] = '-1'
			it['org.eclipse.jdt.core.formatter.blank_lines_after_package'] = '-2'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_abstract_method'] = '-1'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_field'] = '-1'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration'] = '-1'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_imports'] = '1'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_member_type'] = '1'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_method'] = '1'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk'] = '-2'
			it['org.eclipse.jdt.core.formatter.blank_lines_before_package'] = '-1'
			it['org.eclipse.jdt.core.formatter.blank_lines_between_import_groups'] = '-1'
			it['org.eclipse.jdt.core.formatter.blank_lines_between_statement_group_in_switch'] = '-1'
			it['org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations'] = '1'
			it['org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_array_initializer'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_block'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_block_in_case'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_block_in_case_after_arrow'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_enum_constant'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_lambda_body'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_method_declaration'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_record_constructor'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_record_declaration'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_switch'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.brace_position_for_type_declaration'] = 'end_of_line'
			it['org.eclipse.jdt.core.formatter.comment.align_tags_descriptions_grouped'] = 'false'
			it['org.eclipse.jdt.core.formatter.comment.align_tags_names_descriptions'] = 'false'
			it['org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position'] = 'false'
			it['org.eclipse.jdt.core.formatter.comment.format_block_comments'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.format_header'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.format_html'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.format_javadoc_comments'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.format_line_comments'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.format_source_code'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.indent_parameter_description'] = 'false'
			it['org.eclipse.jdt.core.formatter.comment.indent_root_tags'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.indent_tag_description'] = 'false'
			it['org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.comment.insert_new_line_between_different_tags'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.comment.javadoc_do_not_separate_block_tags'] = 'false'
			it['org.eclipse.jdt.core.formatter.comment.line_length'] = '120'
			it['org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries'] = 'true'
			it['org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments'] = 'true'
			it['org.eclipse.jdt.core.formatter.compact_else_if'] = 'true'
			it['org.eclipse.jdt.core.formatter.continuation_indentation'] = '2'
			it['org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer'] = '2'
			it['org.eclipse.jdt.core.formatter.disabling_tag'] = '@formatter:off'
			it['org.eclipse.jdt.core.formatter.enabling_tag'] = '@formatter:on'
			it['org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_record_header'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_empty_lines'] = 'false'
			it['org.eclipse.jdt.core.formatter.indent_statements_compare_to_block'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_statements_compare_to_body'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases'] = 'true'
			it['org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch'] = 'true'
			it['org.eclipse.jdt.core.formatter.indentation.size'] = '4'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_label'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_additive_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_case'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_arrow_in_switch_default'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_bitwise_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_permitted_types'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_record_components'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_switch_case_expressions'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_ellipsis'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_logical_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_multiplicative_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_not_operator'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_record_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_relational_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_shift_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_string_concatenation'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_after_unary_operator'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_additive_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_case'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_arrow_in_switch_default'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_bitwise_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_record_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_permitted_types'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_record_components'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_switch_case_expressions'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_ellipsis'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_logical_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_multiplicative_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_constructor'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_record_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_record_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_relational_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_semicolon'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_shift_operator'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_string_concatenation'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_before_unary_operator'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer'] = 'insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation'] = 'do not insert'
			it['org.eclipse.jdt.core.formatter.join_line_comments'] = 'false'
			it['org.eclipse.jdt.core.formatter.join_lines_in_comments'] = 'true'
			it['org.eclipse.jdt.core.formatter.join_wrapped_lines'] = 'true'
			it['org.eclipse.jdt.core.formatter.keep_annotation_declaration_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_anonymous_type_declaration_on_one_line'] = 'one_line_if_empty'
			it['org.eclipse.jdt.core.formatter.keep_code_block_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line'] = 'true'
			it['org.eclipse.jdt.core.formatter.keep_enum_constant_declaration_on_one_line'] = 'one_line_if_empty'
			it['org.eclipse.jdt.core.formatter.keep_enum_declaration_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_if_then_body_block_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.keep_lambda_body_block_on_one_line'] = 'one_line_if_empty'
			it['org.eclipse.jdt.core.formatter.keep_loop_body_block_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_method_body_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_record_constructor_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_record_declaration_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.keep_simple_do_while_body_on_same_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.keep_simple_for_body_on_same_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.keep_simple_getter_setter_on_one_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.keep_simple_while_body_on_same_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.keep_switch_body_block_on_one_line'] = 'one_line_if_empty'
			it['org.eclipse.jdt.core.formatter.keep_switch_case_with_arrow_on_one_line'] = 'one_line_if_empty'
			it['org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line'] = 'false'
			it['org.eclipse.jdt.core.formatter.keep_type_declaration_on_one_line'] = 'one_line_never'
			it['org.eclipse.jdt.core.formatter.lineSplit'] = '120'
			it['org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column'] = 'false'
			it['org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column'] = 'false'
			it['org.eclipse.jdt.core.formatter.number_of_blank_lines_after_code_block'] = '-1'
			it['org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_code_block'] = '-1'
			it['org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body'] = '-1'
			it['org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_code_block'] = '-1'
			it['org.eclipse.jdt.core.formatter.number_of_blank_lines_at_end_of_method_body'] = '-1'
			it['org.eclipse.jdt.core.formatter.number_of_blank_lines_before_code_block'] = '-1'
			it['org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve'] = '1'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_record_declaration'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause'] = 'common_lines'
			it['org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line'] = 'true'
			it['org.eclipse.jdt.core.formatter.tabulation.char'] = 'space'
			it['org.eclipse.jdt.core.formatter.tabulation.size'] = '4'
			it['org.eclipse.jdt.core.formatter.text_block_indentation'] = '0'
			it['org.eclipse.jdt.core.formatter.use_on_off_tags'] = 'true'
			it['org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations'] = 'false'
			it['org.eclipse.jdt.core.formatter.wrap_before_additive_operator'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_assertion_message_operator'] = 'false'
			it['org.eclipse.jdt.core.formatter.wrap_before_assignment_operator'] = 'false'
			it['org.eclipse.jdt.core.formatter.wrap_before_bitwise_operator'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_conditional_operator'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_logical_operator'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_multiplicative_operator'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_relational_operator'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_shift_operator'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_string_concatenation'] = 'true'
			it['org.eclipse.jdt.core.formatter.wrap_before_switch_case_arrow_operator'] = 'false'
			it['org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested'] = 'true'
			it['org.eclipse.jdt.core.incompatibleJDKLevel'] = 'warning'
			it['org.eclipse.jdt.core.incompleteClasspath'] = 'error'
			it['org.eclipse.jdt.core.javaFormatter'] = 'org.eclipse.jdt.core.defaultJavaFormatter'
		}
	}
	project {
	    
	}
}
